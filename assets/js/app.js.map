{"version":3,"sources":["../../src/js/app.js"],"names":["$","console","group","template","wp","$el","document","getElementById","log","morganAMSystemReport","data","markup","html","meetsRequirementsFields","querySelectorAll","requirementsCheck","val","_","each","check","parseInt","innerText","dataset","meetsRequirements","toString","innerHTML","groupEnd","jQuery"],"mappings":"AAAA,CAAC,UAAWA,CAAX,EAAe;AACf;;AAEAC,SAAQC,KAAR,CAAe,UAAf;AACA,KAAMC,WAAWC,GAAGD,QAAH,CAAa,kBAAb,CAAjB;AACA,KAAME,MAAML,EAAGM,SAASC,cAAT,CAAyB,qBAAzB,CAAH,CAAZ;;AAEAN,SAAQO,GAAR,CAAa,UAAb,EAAyBC,qBAAqBC,IAA9C;;AAEA,KAAMC,SAASR,SAAUM,qBAAqBC,IAA/B,CAAf;;AAEAT,SAAQO,GAAR,CAAa,YAAb,EAA2BG,MAA3B;;AAEAN,KAAIO,IAAJ,CAAUD,MAAV;;AAEA,KAAME,0BAA0BP,SAASQ,gBAAT,CAA2B,wBAA3B,CAAhC;;AAEA;;;;;;;;AAQA,KAAMC,oBAAoB,SAApBA,iBAAoB,CAAEC,GAAF,EAAW;AACpC,SAAOA,MAAM,CAAN,GAAU,IAAV,GAAiB,KAAxB;AACA,EAFD;;AAIA;AACAC,GAAEC,IAAF,CAAQL,uBAAR,EAAiC,UAAEM,KAAF,EAAa;AAC7C,MAAIH,MAAMI,SAAUD,MAAME,SAAhB,EAA2B,EAA3B,CAAV;;AAEAF,QAAMG,OAAN,CAAcC,iBAAd,GAAkCP,IAAIQ,QAAJ,EAAlC;AACAL,QAAMM,SAAN,yCAAsDV,kBAAmBC,GAAnB,CAAtD;AACA,EALD;;AAOAf,SAAQyB,QAAR;AACA,CAtCD,EAsCIC,MAtCJ","file":"app.js","sourcesContent":["(function ( $ ) {\n\t'use strict';\n\n\tconsole.group( 'template' );\n\tconst template = wp.template( 'am-system-report' );\n\tconst $el = $( document.getElementById( 'am-js-system-report' ) );\n\n\tconsole.log( 'data: %O', morganAMSystemReport.data );\n\n\tconst markup = template( morganAMSystemReport.data );\n\n\tconsole.log( 'markup: %O', markup );\n\n\t$el.html( markup );\n\n\tconst meetsRequirementsFields = document.querySelectorAll( '.meets_recommendations' );\n\n\t/**\n\t * Checks if a given value meets requirements.\n\t *\n\t * @since 0.2.0\n\t *\n\t * @param {int} val The number returned from PHP's version_compare().\n\t * @returns {string} 'yes' or 'no', to match a dashicon class name.\n\t */\n\tconst requirementsCheck = ( val ) => {\n\t\treturn val < 0 ? 'no' : 'yes';\n\t};\n\n\t// Convert the field value into a dashicon.\n\t_.each( meetsRequirementsFields, ( check ) => {\n\t\tlet val = parseInt( check.innerText, 10 );\n\n\t\tcheck.dataset.meetsRequirements = val.toString();\n\t\tcheck.innerHTML = `<span class=\"dashicons dashicons-${requirementsCheck( val )}\"></span>`;\n\t} );\n\n\tconsole.groupEnd();\n})( jQuery );\n"]}